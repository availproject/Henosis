// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use anyhow::Result;
use bincode;
use hex;
use risc0_zkvm::{compute_image_id, serde::to_vec, Receipt, ExecutorEnv, default_prover};
use std::str::FromStr;
use std::time::{Duration, Instant};
use serde::{Deserialize, Serialize};
use std::fs::File;
use std::io::prelude::*;
use aggregator::{AGGREGATOR_ID, AGGREGATOR_ELF};

pub fn aggregator_stark_receipts(stark_receipts: [Receipt; 2]) -> Receipt {
    let env = ExecutorEnv::builder()
    .add_assumption(stark_receipts[0].clone())
    // add_assumption makes the receipt to be verified available to the prover.
    .add_assumption(stark_receipts[1].clone())
    .write(&(true))
    .unwrap()
    .build()
    .unwrap();

    let receipt = default_prover().prove(env, AGGREGATOR_ELF).unwrap();
    receipt.verify(AGGREGATOR_ID).unwrap();
    receipt
}